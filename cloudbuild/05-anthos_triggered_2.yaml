# Build file for being executed using a trigger based on repo commit (using $SHORT_SHA)
# It uses custom scripts as described at https://cloud.google.com/solutions/binary-auth-with-cloud-build-and-gke#creating_the_vulnerability_scan_checker_and_enabling_the_api
timeout: '300s'

options:
  env:
  - 'CLOUDSDK_RUN_PLATFORM=gke'
  - 'CLOUDSDK_RUN_CLUSTER=ci-cd-demo'
  - 'CLOUDSDK_RUN_CLUSTER_LOCATION=europe-west1-c'

substitutions:
  _IMAGE_NAME: cloudrun_anthos_demo
  _SERVICE_NAME: anthos-demo
  _KMS_KEYRING: binauthz
  _KMS_LOCATION: europe-west1
  _VULNZ_ATTESTOR: vulnz-attestor
  _VULNZ_KMS_KEY: vulnz-signer
  _VULNZ_KMS_KEY_VERSION: "1"

steps:
- name: mirror.gcr.io/library/golang
  id: Test
  args: ["go", "test","./..."]
  env: ['GO111MODULE=on']
    
- name: 'gcr.io/cloud-builders/docker'
  id: Build
  args:
  - build
  - -t
  - gcr.io/$PROJECT_ID/$_IMAGE_NAME:$SHORT_SHA
  - .

- name: gcr.io/cloud-builders/docker
  id: 'Push'
  args: 
  - push
  - gcr.io/$PROJECT_ID/$_IMAGE_NAME:$SHORT_SHA

- name: gcr.io/$PROJECT_ID/cloudbuild-attestor
  id: Check
  entrypoint: sh
  args:
  - -xe
  - -c
  - |
    /scripts/check_vulnerabilities.sh -p $PROJECT_ID -i gcr.io/$PROJECT_ID/$_IMAGE_NAME:$SHORT_SHA -t 5

- name: gcr.io/$PROJECT_ID/cloudbuild-attestor
  id: Sign
  entrypoint: sh
  args:
  - -xe
  - -c
  - |-
      FQ_DIGEST=$(gcloud container images describe --format 'value(image_summary.fully_qualified_digest)' gcr.io/$PROJECT_ID/$_IMAGE_NAME:$SHORT_SHA)
      /scripts/create_attestation.sh \
        -p "$PROJECT_ID" \
        -i "$${FQ_DIGEST}" \
        -a "$_VULNZ_ATTESTOR" \
        -v "$_VULNZ_KMS_KEY_VERSION" \
        -k "$_VULNZ_KMS_KEY" \
        -l "$_KMS_LOCATION" \
        -r "$_KMS_KEYRING"
  
- name: gcr.io/cloud-builders/gcloud
  id: Deploy
  args:
    - run
    - deploy
    - $_SERVICE_NAME
    - --image 
    - gcr.io/$PROJECT_ID/$_IMAGE_NAME:$SHORT_SHA
    - --connectivity
    - external
